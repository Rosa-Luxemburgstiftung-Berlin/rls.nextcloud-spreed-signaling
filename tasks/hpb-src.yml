---

- name: ensure the deb packages are uninstalled
  ansible.builtin.apt:
    name: "{{ debian_spreed_apt_pkg + struktur_spreed_apt_pkg }}"
    state: absent
    purge: true
    autoremove: true

- name: install build requirements
  ansible.builtin.apt:
    name: "{{ struktur_spreed_build_requirememnts }}"
    update_cache: true

- name: clone repo nextcloud-spreed-signaling
  ansible.builtin.git:
    repo: https://github.com/strukturag/nextcloud-spreed-signaling.git
    dest: /var/tmp/nextcloud-spreed-signaling
    version: "{{ struktur_spreed_build_version | default(omit) }}"
    update: false

- name: build nextcloud-spreed-signaling
  ansible.builtin.command: make build
  args:
    chdir: /var/tmp/nextcloud-spreed-signaling
    creates: /var/tmp/nextcloud-spreed-signaling/bin/signaling

- name: create user
  ansible.builtin.user:
    name: nextcloud-spreed-signaling
    system: true
    shell: /usr/sbin/nologin

- name: install nextcloud-spreed-signaling
  ansible.builtin.copy:
    src: /var/tmp/nextcloud-spreed-signaling/bin/signaling
    dest: /usr/sbin/nextcloud-spreed-signaling
    remote_src: true
    mode: "0750"
    owner: root
    group: nextcloud-spreed-signaling

- name: create cfg dir for nextcloud-spreed-signaling
  ansible.builtin.file:
    path: /etc/nextcloud-spreed-signaling
    state: directory
    mode: "0750"
    owner: root
    group: nextcloud-spreed-signaling

- name: create signaling.service
  ansible.builtin.template:
    src: nextcloud-spreed-signaling.service.j2
    dest: /lib/systemd/system/nextcloud-spreed-signaling.service
    mode: "0644"
    owner: root
    group: root
  register: service

- name: enable nextcloud-spreed-signaling service
  ansible.builtin.systemd:
    daemon_reload: true
    name: nextcloud-spreed-signaling
    enabled: true
    masked: false
  notify: restart nextcloud-spreed-signaling

# nats

- name: install nats-server
  ansible.builtin.apt:
    deb: "{{ nats_download_url }}"

- name: service user for nats-server
  ansible.builtin.user:
    name: nats
    system: true
    shell: /usr/sbin/nologin

- name: create nats-server.conf
  ansible.builtin.template:
    src: nats-server.conf.j2
    dest: /etc/nats-server.conf
    mode: "0640"
    owner: root
    group: nats

- name: create nats-server.service
  ansible.builtin.template:
    src: nats-server.service.j2
    dest: /lib/systemd/system/nats-server.service
    mode: "0644"
    owner: root
    group: root
  register: service

- name: enable nats-server service
  ansible.builtin.systemd:
    daemon_reload: true
    name: nats-server
    enabled: true
    masked: false

- name: start nats-server
  ansible.builtin.service:
    name: nats-server
    state: started

# janus

- name: install janus
  ansible.builtin.apt:
    name: janus

- name: configure janus for nextcloud-spreed-signaling
  ansible.builtin.template:
    src: "{{ item }}.spreed.j2"
    dest: "/etc/janus/{{ item }}.spreed"
    mode: "0644"
  with_items:
    - janus.jcfg
    - janus.transport.websockets.jcfg
    - janus.plugin.videoroom.jcfg

- name: backup original janus files
  ansible.builtin.copy:
    src: "/etc/janus/{{ item }}"
    dest: "/etc/janus/{{ item }}.orig"
    remote_src: true
    force: false
    owner: root
    group: root
    mode: "0644"
  with_items:
    - janus.jcfg
    - janus.transport.websockets.jcfg
    - janus.plugin.videoroom.jcfg

- name: link spreed cfg files for janus
  ansible.builtin.file:
    src: "/etc/janus/{{ item }}.spreed"
    dest: "/etc/janus/{{ item }}"
    owner: root
    group: root
    mode: "0644"
    state: link
  with_items:
    - janus.jcfg
    - janus.transport.websockets.jcfg
    - janus.plugin.videoroom.jcfg

...
